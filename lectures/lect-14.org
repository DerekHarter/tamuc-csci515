#+TITLE:     Lecture 14 Notes
#+AUTHOR:    Derek Harter
#+EMAIL:     derek@harter.pro
#+DATE:      CSci 515 Spring 2015 <2015-05-06 Wed>
#+DESCRIPTION: Lecture 14 Notes.
#+OPTIONS:   H:4 num:t toc:nil
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:nil pri:nil tags:not-in-toc

* First Session (11 - 11:40)
** Stacks
- A stack is a structure that allows nodes to be added and removed from the top of the stack only.
- It is last-in-first-out (LIFO) data structure.  The last item you push, will be the first item back
  out when you pop.
- One way to implement, is using a linked list, where we provide only 2 operations, `push()~ and ~pop()~
- Function push() is basically the same as the ~insertAtFront()~ function we have already developed.
- Function pop() removes item from top

** Self-Referential Structures
- A self-referential structure (or class) contains a pointer member that points to a ~struct~ of the
same type.
- For example, a structure that holds an integer element, and can point to other structures

#+begin_src C
struct Node
{
  int data;
  Node* nextPtr;
};
#+end_src


* Second Session (11:45 - 12:30)

* Third Session (12:40 - 1:40)

