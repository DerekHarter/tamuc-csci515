#+TITLE:     Assg 02: Calculating PI
#+AUTHOR:    CSci 515 Spring 2015
#+EMAIL:     derek@harter.pro
#+DATE:      CSci 515 Spring 2014 <2015-01-23 Fri>
#+DESCRIPTION: Assg 02
#+OPTIONS:   H:4 num:nil toc:nil
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:nil pri:nil tags:not-in-toc
#+LATEX_HEADER: \usepackage{minted}
#+LaTeX_HEADER: \usemintedstyle{default}

* Dates:
| Due: | Tuesday February 3, by Midnight |

* Objectives
- Practice writing index controlled loops
- Become more comfortable with using digital computers for calculating mathematical expressions in C.
- Practice with arithmetic and type conversion in C.
- More practice with output formatting.
- Practice using real valued variables for mathematical calculations.
- Gain experience in translating formula into algorithmic procedures.

* Description
Calculate the value of $\pi$ from the finite series:

$$ \pi = 4 - \frac{4}{3} + \frac{4}{5} - \frac{4}{7} + \frac{4}{9} - \frac{4}{11} ... $$

Print a table that shows the approximate value of $\pi$ after each of
the first N terms of this series.  Your program should prompt the user
for the value of N to determine how many values of the table of
approximate values of $\pi$ will be displayed.  A session of using
your program from the terminal should have exactly the following
output:

#+begin_example
#+end_example

* Lab Submission

An eCollege dropbox has been created for this assignment.  You should
upload your version of the lab by the end of Tuesday 2/3 (midnight) to
the dropbox named ~Assg 02 Calculating PI~. 

* Requirements
Your programs must conform to the style and formatting guidelines given for this course.
The following is a list of the guidelines that are required for the lab to be submitted
this week.

- The file header and function header for your main function must be present, and filled out correctly.
- You must indent your code correctly and have no embedded tabs in your source code.
- You must not have any statements that are hacks in order to keep your terminal from closing when your program exits.
- You must have a single space before and after each binary operator.
- You must have a single blank line after the end of your declaration
  of variables at the top of a function, before the first code
  statement.

Failure to conform to any of these formatting and programming practice
guidelines for this lab will result in a grade of 0 for the lab, and
your program being returned with an indication of which of these items
your program violates.  Failure to follow other class/textbook
programming guidelines may result in a loss of points, especially for
those good programming practices given in chapters 1-5 of our textbook
which you should have read by now.
